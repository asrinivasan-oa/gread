% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_format.R
\name{read_format}
\alias{read_bam}
\alias{read_bed}
\alias{read_format}
\alias{read_gff}
\alias{read_gtf}
\title{Quickly and easily read gtf/gff/bed/bam files}
\usage{
read_format(file, format = detect_format(file), filter = FALSE,
  tidy = TRUE, chromosomes = NULL, tags = c("NM", "MD"),
  verbose = FALSE)

read_gtf(file, filter = FALSE, tidy = TRUE, verbose = FALSE)

read_gff(file, filter = FALSE, tidy = TRUE, verbose = FALSE)

read_bed(file, filter = FALSE, tidy = TRUE, verbose = FALSE)

read_bam(file, filter = FALSE, tidy = TRUE, chromosomes = NULL,
  tags = c("NM", "MD"), verbose = FALSE)
}
\arguments{
\item{file}{Complete path to the input file.}

\item{format}{Type of annotation. Currently allowed values are 
\code{"gtf"}, \code{"gff"}, \code{"bed"} and \code{"bam"}. If no input is 
provided, then it will be guessed from input file's extension.}

\item{filter}{Filter rows where \code{start/stop} are invalid, and where 
\code{start > end}. Default is \code{FALSE} (not to filter, but retain all 
invalid rows).}

\item{tidy}{If \code{TRUE} (default), returns only essential columns for 
further analysis (for e.g, \code{score}, \code{itemRgb} etc. are removed), 
\code{attributes} column is cleaned up with separate columns for 
\code{gene}, \code{transcript} id etc. Default is \code{TRUE}.}

\item{chromosomes}{Argument to \code{read_bam}. If specified only reads 
from those chromosomes will be loaded.}

\item{tags}{Additional (optional) tags to load from the bam file. By 
default, the tags \code{"NM"} and \code{"MD"} are loaded.}

\item{verbose}{If \code{TRUE}, sends useful status messages to the console. 
Default is \code{FALSE}.}
}
\value{
An object of class \code{gtf}, \code{gff}, \code{bed} or \code{bam}, 
corresponding to the input file format, that inherits from \code{data.table}.
}
\description{
\code{read_gtf}, \code{read_gff}, \code{read_bed} and 
\code{read_bam} are specific functions corresponding to respective file 
formats. 

\code{read_format} is a top-level convenience function that detects and 
reads automatically from the extension and is sufficient in most cases.
}
\details{
Note that \code{gff1} uses \code{group} instead of 
\code{attributes} as the column name, but \code{gread} always names it 
as \code{attributes}. Similarly the first three columns of \code{bed} 
format are named \code{seqname, start, end} instead of \code{chrom, 
chromStart, chromEnd} for consistency.

The argument \code{tidy} (\code{TRUE} by default) tidies up the 
\code{attributes} column in case of \code{gtf/gff} format files. The 
\code{attributes} column itself is removed since it is tidied up into 
multiple columns. If this is not desirable, use \code{tidy = FALSE} to 
load the file \emph{as-is} and then use the \code{tidy} function with 
\code{remove_cols = NULL}.

In case of \code{gff} format, when `tidy=TRUE`, generation of columns 
\code{"transcript_id"} and \code{"gene_id"} will be attempted as these 
columns are essential in most cases for downstream analyses. If possible, 
the columns \code{"transcript_name"} and \code{"gene_name"} will also be 
created.
}
\examples{
path <- system.file("tests", package="gread")
gff_file <- file.path(path, "sample.gff")
gtf_file <- file.path(path, "sample.gtf")
bed_file <- file.path(path, "sample.bed")
bam_file <- file.path(path, "sample.bam")

read_format(gff_file) # read gff
read_gff(gff_file)    # same as above
read_format(gtf_file) # read gtf
read_gtf(gtf_file)    # same as above
read_format(bed_file) # read bed
read_bed(bed_file)    # same as above
read_format(bam_file) # read bam
read_bam(bam_file)    # same as above

read_format(gtf_file, tidy=FALSE) # load as is, don't tidy

gtf_filter_file <- file.path(path, "sample_filter.gtf")
read_format(gtf_filter_file, filter=TRUE) # filter invalid rows
read_gtf(gtf_filter_file, filter=TRUE)    # same as above
}
\seealso{
\code{\link{supported_formats}} \code{\link{tidy}} 
\code{\link{extract}} \code{\link{construct_introns}}
}
\keyword{file}

