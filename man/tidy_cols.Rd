% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_format.R
\name{tidy_cols}
\alias{tidy_cols}
\alias{tidy_cols.bam}
\alias{tidy_cols.bed}
\alias{tidy_cols.default}
\alias{tidy_cols.gff}
\alias{tidy_cols.gtf}
\title{Tidy up gtf/gff/bed/bam objects}
\usage{
tidy_cols(x, ...)

\method{tidy_cols}{default}(x, ...)

\method{tidy_cols}{gtf}(x, remove_cols = "attributes", verbose = FALSE, ...)

\method{tidy_cols}{gff}(x, remove_cols = "attributes", verbose = FALSE, ...)

\method{tidy_cols}{bed}(x, remove_cols = NULL, verbose = FALSE, ...)

\method{tidy_cols}{bam}(x, remove_cols = NULL, verbose = FALSE, ...)
}
\arguments{
\item{x}{Input object, of class \code{gtf}, \code{gff}, \code{bed} or 
\code{bam}.}

\item{...}{Arguments that are ignored at the moment.}

\item{remove_cols}{A character vector of column names to be removed.}

\item{verbose}{Logical. Default is \code{FALSE}. If \code{TRUE}, helpful 
status messages are printed on to the console.}
}
\value{
A tidied object of class \code{gtf}, \code{gff}, \code{bed} or 
\code{bam}, that inherits from \code{data.table}.
}
\description{
Tidy up data depending on the type of input format. 

Note that this operation is performed \emph{by reference}, to avoid 
unnecessary copies, for efficiency. Therefore there is no need to assign 
the result back to a variable.
}
\details{
In case of \code{gtf} and \code{gff} formats, the 
\code{attributes} column is extracted into separate columns after which 
it is removed (by default). Set \code{remove_cols} to \code{NULL} if you 
would like to retain the column even after tidying up.

In case of \code{bed} and \code{bam} files, no columns are removed by 
default. However, you can use \code{remove_cols} argument if necessary.

In case of \code{bam} files, the function \code{GAlignments} from the 
\code{GenomicAlignments} Bioconductor package is used to read in the 
file, with the additional arguments for \code{ScanBamParam()} function 
using \code{NM} and \code{MD} tags by default.
}
\examples{
path <- system.file("tests", package="gread")
gff_file <- file.path(path, "sample.gff")
gtf_file <- file.path(path, "sample.gtf")
bed_file <- file.path(path, "sample.bed")
bam_file <- file.path(path, "sample.bam")

gtf <- read_format(gtf_file, tidy_cols=FALSE)
gff <- read_format(gtf_file, tidy_cols=FALSE)
bed <- read_format(bed_file, tidy_cols=FALSE)
bam <- read_format(bam_file, tidy_cols=FALSE)

tidy_cols(gtf, remove_cols=NULL)[]          # tidy attr. col, but not remove
tidy_cols(gff, remove_cols=NULL)[]          # same as above, but for gff
tidy_cols(gtf, remove_cols="attributes")[]  # tidy & remove attr. col
tidy_cols(gff, remove_cols="attributes")[]  # same as above, but for gff

tidy_cols(bed, remove_cols="name")[]        # remove name column
tidy_cols(bam, remove_cols=c("NM", "MD"))[] # remove additional loaded tags 
}
\seealso{
\code{\link{supported_formats}} \code{\link{read_format}} 
\code{\link{extract}} \code{\link{construct_introns}} 
\code{\link{as_granges}}
}

